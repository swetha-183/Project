# Generated by Django 3.2.4 on 2021-07-21 04:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.IntegerField()),
                ('email', models.CharField(max_length=20)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField()),
                ('mobilenumber', models.CharField(max_length=10)),
                ('uimg', models.ImageField(default='pic1.jpg', upload_to='profilepics/')),
                ('role', models.CharField(choices=[(1, 'Guest'), (2, 'Admin'), (3, 'User')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sweet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Iname', models.CharField(max_length=50)),
                ('Icategory', models.CharField(choices=[('SN', 'snack'), ('SW', 'sweet'), ('CA', 'milkshake'), ('DF', 'select item type')], default='DF', max_length=12)),
                ('Price', models.IntegerField()),
                ('Iimage', models.ImageField(default='pic1.jpg', upload_to='Itemimages/')),
                ('Itavilability', models.CharField(choices=[('AV', 'Available'), ('NV', 'Not Available'), ('SL', 'select availability')], default='SL', max_length=20)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Snack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sname', models.CharField(max_length=30)),
                ('scategory', models.CharField(choices=[('SN', 'snack'), ('SW', 'sweet'), ('CA', 'milkshake'), ('XF', 'select item type')], default='XF', max_length=15)),
                ('sprice', models.IntegerField()),
                ('simage', models.ImageField(default='pic1.jpg', upload_to='snacimages/')),
                ('savailability', models.CharField(choices=[('AV', 'Available'), ('NV', 'Not Available'), ('GL', 'select availability')], default='GL', max_length=20)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Milkshake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sname', models.CharField(max_length=30)),
                ('scategory', models.CharField(choices=[('SN', 'snack'), ('SW', 'sweet'), ('CA', 'milkshake'), ('XM', 'select item type')], default='XM', max_length=15)),
                ('sprice', models.IntegerField()),
                ('simage', models.ImageField(default='pic1.jpg', upload_to='milkimages/')),
                ('savailability', models.CharField(choices=[('AV', 'Available'), ('NV', 'Not Available'), ('GM', 'select availability')], default='GM', max_length=20)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
